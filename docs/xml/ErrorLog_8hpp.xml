<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ErrorLog_8hpp" kind="file" language="C++">
    <compoundname>ErrorLog.hpp</compoundname>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_err.h</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">string</includes>
    <includes local="no">list</includes>
    <includes local="no">functional</includes>
    <includedby refid="redcross_8h" local="yes">main/include/redcross.h</includedby>
    <includedby refid="I2Cdev_8cpp" local="yes">main/perif/i2c/I2Cdev.cpp</includedby>
    <incdepgraph>
      <node id="395">
        <label>list</label>
      </node>
      <node id="396">
        <label>functional</label>
      </node>
      <node id="389">
        <label>cmath</label>
      </node>
      <node id="390">
        <label>string</label>
      </node>
      <node id="387">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>esp_err.h</label>
      </node>
      <node id="392">
        <label>esp_log.h</label>
      </node>
      <node id="394">
        <label>cstdio</label>
      </node>
      <node id="391">
        <label>sstream</label>
      </node>
      <node id="386">
        <label>main/include/ErrorLog.hpp</label>
        <link refid="ErrorLog_8hpp"/>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="400">
        <label>main/perif/i2c/I2Cdev.cpp</label>
        <link refid="I2Cdev_8cpp"/>
      </node>
      <node id="398">
        <label>main/include/redcross.h</label>
        <link refid="redcross_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>main/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="397">
        <label>main/include/ErrorLog.hpp</label>
        <link refid="ErrorLog_8hpp"/>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classErr" prot="public">Err</innerclass>
    <innerclass refid="classErrorHandler" prot="public">ErrorHandler</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="ErrorLog_8hpp_1af80fb2bfb08c8776e58d199d2f644a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>template&lt; Ret(*)(Args...), Args... &gt; class...</type>
            <declname>func</declname>
            <defname>func</defname>
          </param>
        </templateparamlist>
        <type>function&lt; bool(Args...)&gt;</type>
        <definition>function&lt;bool(Args...)&gt; _</definition>
        <argsstring>(esp_err_t idfFunc(Args...), Err::Flag valid=Err::ErrOK)</argsstring>
        <name>_</name>
        <param>
          <type>esp_err_t </type>
          <declname>idfFunc</declname>
          <array>Args...</array>
        </param>
        <param>
          <type><ref refid="classErr_1a5027803a04dbda5395326274137d63ff" kindref="member">Err::Flag</ref></type>
          <declname>valid</declname>
          <defval><ref refid="classErr_1a5027803a04dbda5395326274137d63ffa32bb3ca49d660fa0525cba5aeb786059" kindref="member">Err::ErrOK</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function call operator to pass an ESP function, it&apos;s name and any arguments.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Ret</parametername>
</parameternamelist>
<parameterdescription>
<para>the ESP function return type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>the ESP function args </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>the ESP function signature </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idfFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>the ESP function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valid</parametername>
</parameternamelist>
<parameterdescription>
<para>the function label (for debugging) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a wrapper around the ESP function with error checking </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/include/ErrorLog.hpp" line="197" column="1" bodyfile="main/include/ErrorLog.hpp" bodystart="197" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ErrorLog class definition. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Timothy Logan <ulink url="mailto:logantc@dukes.jmu.edu">logantc@dukes.jmu.edu</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="main/include/ErrorLog.hpp"/>
  </compounddef>
</doxygen>
