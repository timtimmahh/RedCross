# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.


set(CMAKE_CONFIGURATION_TYPES "uno;megaatmega2560;esp32dev;" CACHE STRING "" FORCE)

set(PLATFORMIO_CMD "$ENV{HOME}/.local/bin/pio")

SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")
SET(CMAKE_C_FLAGS "-std=gnu99 -Wno-old-style-declaration -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "esp32dev")
    add_definitions(-D'PLATFORMIO=40101')
    add_definitions(-D'ARDUINO_ESP32_DEV')
    add_definitions(-D'ESP32')
    add_definitions(-D'ESP_PLATFORM')
    add_definitions(-D'F_CPU=240000000L')
    add_definitions(-D'HAVE_CONFIG_H')
    add_definitions(-D'MBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\"')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'ARDUINO_ARCH_ESP32')
    add_definitions(-D'ARDUINO_VARIANT=\"esp32\"')
    add_definitions(-D'ARDUINO_BOARD=\"Espressif ESP32 Dev Module\"')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/RealTime")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/Erriez DS1302 RTC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/LidarMap/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/LIDAR-Lite_ID1186/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AccelGyro/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Sensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/I2Cdevlib-MPU6050_ID107")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/I2Cdevlib-Core_ID11")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/ESP32 AnalogWrite_ID5819/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/variants/esp32")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor2/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/TurnSignal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")
endif()

if (CMAKE_BUILD_TYPE MATCHES "uno")
    add_definitions(-D'PLATFORMIO=40101')
    add_definitions(-D'ARDUINO_AVR_UNO')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega328P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/RealTime")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/uno/Erriez DS1302 RTC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/LidarMap/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AccelGyro/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Sensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/uno/I2Cdevlib-MPU6050_ID107")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/uno/I2Cdevlib-Core_ID11")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/uno/LIDAR-Lite_ID1186/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/standard")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor2/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/TurnSignal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")
endif()
if (CMAKE_BUILD_TYPE MATCHES "megaatmega2560")
    add_definitions(-D'PLATFORMIO=40101')
    add_definitions(-D'ARDUINO_AVR_MEGA2560')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega2560__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/RealTime")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/megaatmega2560/Erriez DS1302 RTC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/LidarMap/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AccelGyro/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Sensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/megaatmega2560/I2Cdevlib-MPU6050_ID107")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/megaatmega2560/I2Cdevlib-Core_ID11")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/megaatmega2560/LIDAR-Lite_ID1186/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/mega")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Motor2/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/TurnSignal")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/megaatmega2560/ESP32 AnalogWrite_ID5819/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")
endif()
FILE(GLOB_RECURSE SRC_LIST "${CMAKE_CURRENT_LIST_DIR}/src/*.*" "${CMAKE_CURRENT_LIST_DIR}/lib/*.*" "${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32dev/*.*")
